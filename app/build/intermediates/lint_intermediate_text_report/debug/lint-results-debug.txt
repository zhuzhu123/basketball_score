E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:558: Error: Call requires permission which may be rejected by user: code should explicitly check to see if permission is available (with checkPermission) or explicitly handle a potential SecurityException [MissingPermission]
            showToast("正在连接PC蓝牙设备: " + pcDevice.getName());
                                       ~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "MissingPermission":
   This check scans through your code and libraries and looks at the APIs
   being used, and checks this against the set of permissions required to
   access those APIs. If the code using those APIs is called at runtime, then
   the program will crash.

   Furthermore, for permissions that are revocable (with targetSdkVersion 23),
   client code must also be prepared to handle the calls throwing an exception
   if the user rejects the request for permission at runtime.

E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\BluetoothManager.java:135: Warning: Implicitly using the default locale is a common source of bugs: Use toLowerCase(Locale) instead. For strings meant to be internal use Locale.ROOT, otherwise Locale.getDefault(). [DefaultLocale]
                device.getName().toLowerCase().contains(deviceName.toLowerCase())) {
                                 ~~~~~~~~~~~
E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\BluetoothManager.java:135: Warning: Implicitly using the default locale is a common source of bugs: Use toLowerCase(Locale) instead. For strings meant to be internal use Locale.ROOT, otherwise Locale.getDefault(). [DefaultLocale]
                device.getName().toLowerCase().contains(deviceName.toLowerCase())) {
                                                                   ~~~~~~~~~~~

   Explanation for issues of type "DefaultLocale":
   Calling String#toLowerCase() or #toUpperCase() without specifying an
   explicit locale is a common source of bugs. The reason for that is that
   those methods will use the current locale on the user's device, and even
   though the code appears to work correctly when you are developing the app,
   it will fail in some locales. For example, in the Turkish locale, the
   uppercase replacement for i is not I.

   If you want the methods to just perform ASCII replacement, for example to
   convert an enum name, call String#toUpperCase(Locale.US) instead. If you
   really want to use the current locale, call
   String#toUpperCase(Locale.getDefault()) instead.

   https://developer.android.com/reference/java/util/Locale.html#default_locale

E:\project\basketball_score\app\build.gradle:11: Warning: Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]
        targetSdk 34
        ~~~~~~~~~~~~

   Explanation for issues of type "OldTargetApi":
   When your application runs on a version of Android that is more recent than
   your targetSdkVersion specifies that it has been tested with, various
   compatibility modes kick in. This ensures that your application continues
   to work, but it may look out of place. For example, if the targetSdkVersion
   is less than 14, your app may get an option button in the UI.

   To fix this issue, set the targetSdkVersion to the highest available value.
   Then test your app to make sure everything works correctly. You may want to
   consult the compatibility notes to see what changes apply to each version
   you are adding support for:
   https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
   as well as follow this guide:
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

E:\project\basketball_score\app\src\main\res\values\themes.xml:13: Warning: Unnecessary; SDK_INT is always >= 21 [ObsoleteSdkInt]
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
                                            ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:7: Warning: Possible overdraw: Root element paints background @color/court_green with a theme that also paints a background (inferred theme is @style/Theme_BasketballScoreRemote) [Overdraw]
    android:background="@color/court_green"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Overdraw":
   If you set a background drawable on a root view, then you should use a
   custom theme where the theme background is null. Otherwise, the theme
   background will be painted first, only to have your custom background
   completely cover it; this is called "overdraw".

   NOTE: This detector relies on figuring out which layouts are associated
   with which activities based on scanning the Java code, and it's currently
   doing that using an inexact pattern matching algorithm. Therefore, it can
   incorrectly conclude which activity the layout is associated with and then
   wrongly complain that a background-theme is hidden.

   If you want your custom background on multiple pages, then you should
   consider making a custom theme with your custom background and just using
   that theme instead of a root element background.

   Of course it's possible that your custom drawable is translucent and you
   want it to be mixed with the background. However, you will get better
   performance if you pre-mix the background with your drawable and use that
   resulting image or color as a custom theme background instead.

E:\project\basketball_score\app\src\main\res\values\colors.xml:3: Warning: The resource R.color.purple_200 appears to be unused [UnusedResources]
    <color name="purple_200">#FFBB86FC</color>
           ~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\values\colors.xml:4: Warning: The resource R.color.purple_500 appears to be unused [UnusedResources]
    <color name="purple_500">#FF6200EE</color>
           ~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\values\colors.xml:5: Warning: The resource R.color.purple_700 appears to be unused [UnusedResources]
    <color name="purple_700">#FF3700B3</color>
           ~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\values\strings.xml:3: Warning: The resource R.string.bluetooth_connecting appears to be unused [UnusedResources]
    <string name="bluetooth_connecting">正在连接蓝牙设备...</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\values\strings.xml:4: Warning: The resource R.string.bluetooth_connected appears to be unused [UnusedResources]
    <string name="bluetooth_connected">蓝牙已连接</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\values\strings.xml:7: Warning: The resource R.string.bluetooth_enable appears to be unused [UnusedResources]
    <string name="bluetooth_enable">启用蓝牙</string>
            ~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\values\strings.xml:8: Warning: The resource R.string.bluetooth_permission_required appears to be unused [UnusedResources]
    <string name="bluetooth_permission_required">需要蓝牙权限才能使用此功能</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\values\strings.xml:18: Warning: The resource R.string.time appears to be unused [UnusedResources]
    <string name="time">时间</string>
            ~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\values\strings.xml:21: Warning: The resource R.string.device_not_found appears to be unused [UnusedResources]
    <string name="device_not_found">未找到指定的蓝牙设备</string>
            ~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\values\strings.xml:22: Warning: The resource R.string.connection_failed appears to be unused [UnusedResources]
    <string name="connection_failed">连接失败</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

E:\project\basketball_score\app\src\main\res\values\strings.xml:3: Warning: Replace "..." with ellipsis character (…, &#8230;) ? [TypographyEllipsis]
    <string name="bluetooth_connecting">正在连接蓝牙设备...</string>
                                        ~~~~~~~~~~~

   Explanation for issues of type "TypographyEllipsis":
   You can replace the string "..." with a dedicated ellipsis character,
   ellipsis character (u2026, &#8230;). This can help make the text more
   readable.

   https://en.wikipedia.org/wiki/Ellipsis

E:\project\basketball_score\app\src\main\res\mipmap-hdpi\ic_launcher_round.png: Warning: The following unrelated icon files have identical contents: ic_launcher.png, ic_launcher_round.png [IconDuplicates]
E:\project\basketball_score\app\src\main\res\mipmap-mdpi\ic_launcher_round.png: Warning: The following unrelated icon files have identical contents: ic_launcher.png, ic_launcher_round.png [IconDuplicates]
E:\project\basketball_score\app\src\main\res\mipmap-xhdpi\ic_launcher_round.png: Warning: The following unrelated icon files have identical contents: ic_launcher.png, ic_launcher_round.png [IconDuplicates]
E:\project\basketball_score\app\src\main\res\mipmap-xxhdpi\ic_launcher_round.png: Warning: The following unrelated icon files have identical contents: ic_launcher.png, ic_launcher_round.png [IconDuplicates]
E:\project\basketball_score\app\src\main\res\mipmap-xxxhdpi\ic_launcher_round.png: Warning: The following unrelated icon files have identical contents: ic_launcher.png, ic_launcher_round.png [IconDuplicates]

   Explanation for issues of type "IconDuplicates":
   If an icon is repeated under different names, you can consolidate and just
   use one of the icons and delete the others to make your application
   smaller. However, duplicated icons usually are not intentional and can
   sometimes point to icons that were accidentally overwritten or accidentally
   not updated.

E:\project\basketball_score\app\src\main\res\layout\dialog_edit_quarter.xml:30: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\dialog_edit_quarter.xml:56: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~

   Explanation for issues of type "Autofill":
   Specify an autofillHints attribute when targeting SDK version 26 or higher
   or explicitly specify that the view is not important for autofill. Your app
   can help an autofill service classify the data correctly by providing the
   meaning of each view that could be autofillable, such as views representing
   usernames, passwords, credit card fields, email addresses, etc.

   The hints can have any value, but it is recommended to use predefined
   values like 'username' for a username or 'creditCardNumber' for a credit
   card number. For a list of all predefined autofill hint constants, see the
   AUTOFILL_HINT_ constants in the View reference at
   https://developer.android.com/reference/android/view/View.html.

   You can mark a view unimportant for autofill by specifying an
   importantForAutofill attribute on that view or a parent view. See
   https://developer.android.com/reference/android/view/View.html#setImportant
   ForAutofill(int).

   https://developer.android.com/guide/topics/text/autofill.html

E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:183: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        btnConnectPC.setText("连接PC");
                             ~~~~~~
E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:428: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
                tvBluetoothStatus.setText("已连接 (" + bluetoothManager.getConnectionType() + ")");
                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:434: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
                btnConnect.setText("连接PC");
                                   ~~~~~~
E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:533: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        etPCHost.setText("192.168.1.100"); // 默认IP
                         ~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:748: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        tvMatchName.setText("比赛名称：" + matchName);
                            ~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:749: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        tvMatchNote.setText("备注：" + (matchNote.isEmpty() ? "无" : matchNote));
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:750: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        tvCurrentQuarter.setText("当前节次：第" + currentQuarter + "节");
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:751: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        tvQuarterScore.setText("本节比分：" + homeScore + " : " + awayScore);
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\java\com\basketball\scoreremote\MainActivity.java:756: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        tvTotalScore.setText("总比分：" + currentTotalHomeScore + " : " + currentTotalAwayScore);
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SetTextI18n":
   When calling TextView#setText
   * Never call Number#toString() to format numbers; it will not handle
   fraction separators and locale-specific digits properly. Consider using
   String#format with proper format specifications (%d or %f) instead.
   * Do not pass a string literal (e.g. "Hello") to display text. Hardcoded
   text can not be properly translated to other languages. Consider using
   Android resource strings instead.
   * Do not build messages by concatenating text chunks. Such messages can not
   be properly translated.

   https://developer.android.com/guide/topics/resources/localization.html

E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:33: Warning: Hardcoded string "比赛管理", should use @string resource [HardcodedText]
                    android:text="比赛管理"
                    ~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:51: Warning: Hardcoded string "比赛名称：未设置", should use @string resource [HardcodedText]
                        android:text="比赛名称：未设置"
                        ~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:60: Warning: Hardcoded string "备注：未设置", should use @string resource [HardcodedText]
                        android:text="备注：未设置"
                        ~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:68: Warning: Hardcoded string "当前节次：第1节", should use @string resource [HardcodedText]
                        android:text="当前节次：第1节"
                        ~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:78: Warning: Hardcoded string "本节比分：0 : 0", should use @string resource [HardcodedText]
                        android:text="本节比分：0 : 0"
                        ~~~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:88: Warning: Hardcoded string "总比分：0 : 0", should use @string resource [HardcodedText]
                        android:text="总比分：0 : 0"
                        ~~~~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:106: Warning: Hardcoded string "新建比赛", should use @string resource [HardcodedText]
                        android:text="新建比赛"
                        ~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:112: Warning: Hardcoded string "保存本节", should use @string resource [HardcodedText]
                        android:text="保存本节"
                        ~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:119: Warning: Hardcoded string "保存比赛", should use @string resource [HardcodedText]
                        android:text="保存比赛"
                        ~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:136: Warning: Hardcoded string "查看上节", should use @string resource [HardcodedText]
                        android:text="查看上节"
                        ~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:143: Warning: Hardcoded string "编辑上节", should use @string resource [HardcodedText]
                        android:text="编辑上节"
                        ~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:222: Warning: Hardcoded string "0", should use @string resource [HardcodedText]
                        android:text="0" />
                        ~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:230: Warning: Hardcoded string ":", should use @string resource [HardcodedText]
                    android:text=":"
                    ~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:256: Warning: Hardcoded string "0", should use @string resource [HardcodedText]
                        android:text="0" />
                        ~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:399: Warning: Hardcoded string "游戏控制", should use @string resource [HardcodedText]
                    android:text="游戏控制"
                    ~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:475: Warning: Hardcoded string "1", should use @string resource [HardcodedText]
                    android:text="1"
                    ~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\activity_main.xml:491: Warning: Hardcoded string "下一节", should use @string resource [HardcodedText]
                    android:text="下一节"
                    ~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\dialog_edit_quarter.xml:11: Warning: Hardcoded string "编辑节次比分", should use @string resource [HardcodedText]
        android:text="编辑节次比分"
        ~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\dialog_edit_quarter.xml:26: Warning: Hardcoded string "主队得分：", should use @string resource [HardcodedText]
            android:text="主队得分："
            ~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\dialog_edit_quarter.xml:36: Warning: Hardcoded string "输入主队得分", should use @string resource [HardcodedText]
            android:hint="输入主队得分"
            ~~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\dialog_edit_quarter.xml:52: Warning: Hardcoded string "客队得分：", should use @string resource [HardcodedText]
            android:text="客队得分："
            ~~~~~~~~~~~~~~~~~~~~
E:\project\basketball_score\app\src\main\res\layout\dialog_edit_quarter.xml:62: Warning: Hardcoded string "输入客队得分", should use @string resource [HardcodedText]
            android:hint="输入客队得分"
            ~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

1 errors, 54 warnings
